#!/bin/bash
shopt -s nullglob
if [ -f "${ROOT_DIR}/conf/common.conf" ]; then
	. "${ROOT_DIR}/conf/common.conf"
else
	. "${ROOT_DIR}/conf/common.conf.default"
fi


OUTPUT_DIR=${ROOT_DIR}/compiled

sassc_func(){ 
	echo "sassc"
	if command -v sassc > /dev/null 2>&1; then
		SASS=sassc
	elif [ -x "${ROOT_DIR}/build_tools/sources/sassc/bin/sassc" ]; then
		SASS="${ROOT_DIR}/build_tools/sources/sassc/bin/sassc"
	else
		echo "At this moment, the only sass tool build_scripts/css supports is sassc. You can install it yourself or build the submodule in the build_tools directory."
		echo 'At time of writing (Aug 2019), cloning github.com/sass/sassc, running `. scripts/bootstrap` inside of it, and `make` is enough. It created two folders:sass-spec and libsass in the same directory as sassc, which can be deleted safely.'
		return
	fi

	mkdir -p ${OUTPUT_DIR}/css
	shopt -s globstar
	for filename in $(realpath ${ROOT_DIR})/sass/**/*.scss $(realpath ${ROOT_DIR})/sass/*.scss; do
		if [[ "$(basename ${filename})" = "_"* ]]; then
			continue
		elif [ -r "$filename" ] && [ -f "$filename" ]; then
			output=$(realpath ${OUTPUT_DIR}/css)/${filename#"$(realpath ${ROOT_DIR})/sass/"}
			output=${output%.scss}.css
			output_dir=$(dirname ${output})
			mkdir -p ${output_dir}
			echo $PWD
			${SASS} ${filename} ${output}
		fi
	done
	shopt -u globstar
}
sassc_func

prefixer(){
	echo "prefixing"
	if [ -e ${ROOT_DIR}/build_tools/toolchain/prefixer/package-lock.json ]; then
		shopt -u nullglob
		if ! ls -A ${OUTPUT_DIR}/css/*.css > /dev/null 2>&1; then
			shopt -s nullglob
			echo "no CSS"
			return
		fi
		shopt -s nullglob
		if command -v npx > /dev/null 22>&1; then
			pushd ${ROOT_DIR}/build_tools/toolchain/prefixer/
			npx postcss ${OUTPUT_DIR}/css/*.css --no-map --use autoprefixer -d ${OUTPUT_DIR}/css/
			popd
		else
			echo "npx not found, must be installed for this to work"
			return
		fi
	else 
		echo 'prefixer not found in in build_tools/tool_chain/prefixer- `npm install postcss-cli autoprefixer` maybe?'
	fi
}
prefixer
